// вывести список существующих образов
docker images

// вывести все контейнеры и их состояние
1. docker ps -a
2. docker container ls -a

// запуск контейнера
// -d - не передает ввод терминала запущенному процессу (фоновый режим)
// --rm - автоудаление контейнера после его остановки
docker run -itd --rm <имя образа>

// действия с контейнером
docker start/restart/stop <имя контейнера>

// реал-тайм вывод лога контейнера
docker logs -f --tail 10 `docker ps -q --filter name=^<container_name>$`

// удаление контейнера
docker rm <имя контейнера>

// подключение к терминалу контейнера по имени (см. docker filter)
docker exec -it `docker ps -q --filter name=^<container_name>$` bash

// удаление образа
docker rmi <имя образа>

// удаление всех остановленных контейнеров
docker container prune

// удаление неиспользуемых образов
docker image prune -a

// удаление всего (!)
docker system prune -af

// поднять контейнер в фоновом режиме из файла docker-compose
1. перейти в директорию к файлу, названному docker-compose.yml/yaml
2. docker-compose up -d

// войти в терминал контейнера
docker exec -it <имя контейнера> bash

// просмотр IP-адресов контейнеров, информации о подсети и т.д.
docker network inspect <папка с данными докера>_default

	пример:
	docker network inspect dockerdata_default

	также папку можно найти в списке:
	docker network ls


// собрать образ из Dockerfile
! докер-файл должен быть назван Dockerfile (без расширения)
docker build -t docker-ubuntu .

// скопировать файл из контейнера
docker cp <id контейнера>:<путь и файл> <имя копии>
пример: docker cp pgadmin:/tmp/dump dump

// скопировать файл в контейнер
docker cp <имя файла> container_id:/<путь и имя копии>
пример: docker cp r.txt pgadmin:/tmp/r.txt

// скопировать папку с файлами в контейнер
docker cp pkg/. debian:/tmp/pkg/


// пуш образа в докер-репозиторий

1. посмотреть id нужного образа командой docker images
id выглядит как 869c87edba75

2. присвоить образу тег:
docker tag <id образа> nightblure/<имя образа>

3. залогиниться:
docker login -u <login>

4. запушить образ
docker push nightblure/<имя образа>

