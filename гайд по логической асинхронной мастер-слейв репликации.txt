1. узнать адрес подсети (Subnet) и адрес мастер-контейнера:
docker network inspect <папка с данными докера>_default

	пример:
	docker network inspect dockerdata_default

	также папку можно найти в общем списке:
	docker network ls

* УЗНАВАТЬ IP МАСТЕРА НЕОБЯЗАТЕЛЬНО, ЕСЛИ В DOCKER-COMPOSE БЫЛ ЗАДАН HOSTNAME
* В ШАГЕ 8 ВМЕСТО ID МОЖНО УКАЗЫВАТЬ HOSTNAME


2. на мастере поправить конфиг postgresql.conf: 

	ALTER SYSTEM SET wal_level = logical;
	ALTER SYSTEM SET listen_addresses = '*';
	SELECT pg_reload_conf();

ИЛИ РАСКОММЕНТИРОВАТЬ wal_level = logical и listen_addresses = '*':

	2.1 войти в терминал контейнера: docker exec -it pg_master bash

	2.2 обновить пакеты и установить nano: apt-get update && apt-get install nano

	2.3 редактирование конфига
	nano var/lib/postgresql/data/postgresql.conf 
	* если конфига нет, то он лежит просто в другой папке, нужно найти его

	2.4 ребутнуть контейнер мастера
	подключиться к нему в pgAdmin. если имя контейнера не резолвится, то в hostname указать host.docker.internal
        !! ПРИ НАСТРОЙКЕ КОННЕКТА НЕ ЗАБЫТЬ УКАЗАТЬ РАЗНЫЕ ПОРТЫ! У МАСТЕРА 5431, У РЕПЛИКИ 5432

	2.5 перезапустить контейнер и убедиться, что параметр wal_level поменял свое значение:
	select * 
	from pg_settings
	where name = 'wal_level'

3*. (необязательно) в pg_hba.conf разрешить всем хостам подсети коннектиться по адресу подсети (subnet):
host replication all <адрес подсети с маской> md5

	3.1 редактирование конфига
	nano var/lib/postgresql/data/pg_hba.conf

4. создаем БД testdb и таблицу на мастере и реплике

у таблицы обязательно должен быть первичный ключ, без этого логическая репликация не заработает!

CREATE TABLE test_table (
id SERIAL,
name TEXT);

ALTER TABLE test_table REPLICA IDENTITY FULL;


5*. (необязательно) на мастере создать пользователя с ролью replication
если шаг пропущен, можно юзать пользователя postgres

CREATE ROLE replication_user WITH REPLICATION LOGIN PASSWORD 'pass';
GRANT ALL PRIVILEGES ON DATABASE testdb TO replication_user;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO replication_user;


6. создать публикацию на мастере
CREATE PUBLICATION publication 
FOR TABLE <table>;


7. подписаться на публикацию из реплики
CREATE SUBSCRIPTION subscription 
CONNECTION 'host=<IP мастера без маски подсети или hostname> port=<port> password=pass user=<пользователь с ролью replication или postgres> dbname=testdb'
PUBLICATION publication;


8. тестирование. на мастере и реплике создать БД и тестовую таблицу:

INSERT INTO test_table(name)
SELECT generate_series(1, 10000)::text;

select *
from test_table;

delete from test_table;


ИСТОЧНИКИ ИНФОРМАЦИИ:

https://eax.me/postgresql-logical-replication/
https://eax.me/postgresql-replication/




