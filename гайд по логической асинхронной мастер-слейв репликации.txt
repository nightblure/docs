// для запоминания адресов
subnet: 172.26.0.0/16
master: 172.19.0.4

1. узнать адрес подсети (Subnet) и адрес мастер-контейнера:
docker network inspect <папка с данными докера>_default

	пример:
	docker network inspect dockerdata_default

	также папку можно найти в общем списке:
	docker network ls


2. на мастере настроиить postgresql.conf: wal_level = logical и раскомментировать listen_addresses = '*'
ИЛИ ВМЕСТО РУЧНОЙ ПРАВКИ КОНФИГА вызвать 
ALTER SYSTEM SET wal_level = logical и ALTER SYSTEM SET listen_addresses = '*'

	2.1 войти в терминал контейнера
	docker exec -it postgres_master bash

	2.2 обновить пакеты и установить nano
	apt-get update && apt-get install nano

	2.3 редактирование конфига
	nano var/lib/postgresql/data/pgdata/postgresql.conf


3*. (необязательно) в pg_hba.conf разрешить всем хостам подсети коннектиться по адресу подсети (subnet):
host replication all <адрес подсети с маской> md5

	3.1 редактирование конфига
	nano var/lib/postgresql/data/pgdata/pg_hba.conf


4. применить изменения конфигурации мастера ребутом контейнера/сервиса postgresql


5. создаем БД testdb и таблицу на мастере и реплике

у таблицы обязательно должен быть первичный ключ, без этого логическая репликация не заработает!

CREATE TABLE test_table (
id SERIAL,
name TEXT);

ALTER TABLE test_table REPLICA IDENTITY FULL;


6*. (необязательно) на мастере создать пользователя с ролью replication
если шаг пропущен, можно юзать пользователя postgres

CREATE ROLE replication_user WITH REPLICATION LOGIN PASSWORD 'pass';
GRANT ALL PRIVILEGES ON DATABASE testdb TO replication_user;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO replication_user;


7. создать публикацию на мастере
CREATE PUBLICATION my_publication 
FOR TABLE test_table;


8. подписаться на публикацию из реплики
CREATE SUBSCRIPTION my_subscription 
CONNECTION 'host=<IP мастера без маски подсети> port=5432 password=pass user=<пользователь с ролью replication или postgres> dbname=testdb' 
PUBLICATION my_publication;


9. тестирование. на мастере и реплике создать БД и тестовую таблицу:

INSERT INTO test_table(name)
SELECT generate_series(1, 10000)::text;

select *
from test_table;

delete from test_table;


ИСТОЧНИКИ ИНФОРМАЦИИ:

https://eax.me/postgresql-logical-replication/
https://eax.me/postgresql-replication/




