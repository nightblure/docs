pg_ctl.exe status -D "C:/Program Files/PostgreSQL/10/data"
-----------------------------------------------------

// Создание БД
psql -U postgres -c "CREATE DATABASE ""dbtest"""

// Удаление БД
psql -U postgres -c "DROP DATABASE IF EXISTS ""dbtest"""

// Восстановить БД из дампа (работает только если дамп был создан также командой)
psql -f "C:\DB backups\ACRF dump with data (8 dec)" "dbtest" postgres

// Создание дампа
pg_dump -U postgres [--encoding=utf-8] [-F c] "ACRF" > "C:\DB backups\ACRF dump (8 dec)"

// Подключение к БД
psql -U postgres -d "dbtest"

// *если не работает, то указывать путь до psql
"C:\Program Files\PostgreSQL\10\bin\psql.exe" -U postgres -d postgres -c "CREATE DATABASE ""dbtest"""

// Удаление всех таблиц
DROP SCHEMA public CASCADE;
CREATE SCHEMA public AUTHORIZATION postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO public;

// Отключить все соединения с БД
SELECT pg_terminate_backend(pg_stat_activity.pid)
FROM pg_stat_activity
WHERE datname = current_database()
AND pid <> pg_backend_pid();


// Узнать примерное кол-во строк в таблице (берется из статистики)
* если требуется узнать примерное кол-во строк у запроса, 
то это можно сделать с помощью EXPLAIN 
SELECT reltuples::bigint AS count
FROM pg_class
WHERE oid = 'table'::regclass


// Вернет формальный номер недели (для 01.01.2021 вернет 1)
SELECT to_char('2021-01-01' ::date, 'ww') ::int
	

// Вернет номер недели по стандарту ISO 8601 (для 01.01.2021 вернет 53)
SELECT EXTRACT(WEEK FROM ('2021-01-01' ::date))


// Получает из даты date дату дня с номером TARGET_DAY_NUMBER
date - ((SELECT EXTRACT(DOW FROM date) :: INTEGER - <TARGET_DAY_NUMBER>) * interval '1 day'))


// Применить изменения конфига без перезапуска инстанса
SELECT pg_reload_conf();


// Пронумеровать записи таблицы в новом столбце
ALTER TABLE table ADD field SERIAL


// Добавить столбец с нумерацией записей в запрос
SELECT *, row_number() OVER () as rnum
FROM test


// Сгенерировать записи
INSERT INTO table(field)
SELECT generate_series(1, 10, 2)


// Изменить существующее ключевое поле на автогенерируемое при вставке, 
// чтобы его можно было не указывать в INSERT
CREATE SEQUENCE test_id_seq
OWNED BY test.id;

ALTER TABLE test
ALTER id SET DEFAULT nextval('test_id_seq');


// Добавить поле в ключ
ALTER TABLE test ADD PRIMARY KEY (id)


// Копирование данных между таблицами
INSERT INTO table1 (f1, f2, ...) SELECT f1, f2, ... FROM table2